{"pageProps":{"post":{"content":"<h1 id=\"소수-구하기\">소수 구하기</h1>\n<h2 id=\"소수\">소수</h2>\n<p>1과 자기 자신으로만 나눠지는 2 이상의 정수</p>\n<h2 id=\"소수를-구하는-기본-방법\">소수를 구하는 기본 방법</h2>\n<p>소수가 아닌 수를 걸러낸다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getMinority</span>(<span class=\"hljs-params\">number</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> numbers = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>(number);\n\n  numbers[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span>;\n  numbers[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">1</span>;\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">2</span>; i &lt; number; i++) {\n    <span class=\"hljs-keyword\">if</span> (!numbers[i]) {\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">2</span> * i; j &lt;= number; j += i) {\n        numbers[j] = <span class=\"hljs-number\">1</span>;\n      }\n    }\n  }\n  <span class=\"hljs-built_in\">console</span>.log(numbers);\n  <span class=\"hljs-keyword\">const</span> minorities = [];\n  <span class=\"hljs-keyword\">const</span> numbersLength = numbers.length;\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">2</span>; i &lt; number; i++) {\n    <span class=\"hljs-keyword\">if</span> (!numbers[i]) {\n      minorities.push(i);\n    }\n  }\n\n  <span class=\"hljs-built_in\">console</span>.log(minorities);\n}</code></pre>\n<p>단순하게 할 경우 숫자의 중복이 많이 발생하여 계산을 끝없이 해야하는 경우가 생길 수 있지만, 이렇게 배수들을 미리 제거하면서 할 경우 이중 반복문이라고 하더라도 훨씬 빠르게 계산할 수 있다. 소수에서 이렇게 배수들을 미리 제거하면서 하는 방법을 <code>에라토스체네스의 체</code>로 걸러낸다고 한다.</p>\n","data":{},"isEmpty":false,"excerpt":""}},"__N_SSG":true}